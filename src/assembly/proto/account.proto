syntax = "proto3";

package account;

import "koinos/options.proto";

message mod {
    
}

message call_contract_operation {
    bytes contract_id = 1;
    uint32 entry_point = 2;
    bytes args = 3;
}

message upload_contract_operation {
    bytes contract_id = 1;
    bytes bytecode = 2;
    string abi = 3;
    bool authorizes_call_contract = 4;
    bool authorizes_transaction_application = 5;
    bool authorizes_upload_contract = 6;
}

message set_system_contract_operation {
    bytes contract_id = 1;
    bool system_contract = 2;
}

message contract_call_bundle {
  bytes contract_id = 1;
  uint32 entry_point = 2;
}

message think_id_nested {
  uint32 thunk_id = 1;
}

message contract_call_bundle_nested {
    contract_call_bundle system_call_bundle = 1;
}

message system_call_target {
  oneof target {
    think_id_nested thunk = 1;
    contract_call_bundle_nested contract = 2;
  }
}

message set_system_call_operation {
  uint32 call_id = 1;
  system_call_target target = 2;
}

message operation {
  oneof operation {
    call_contract_operation call_contract = 1;
    upload_contract_operation upload_contract = 2;
    set_system_call_operation set_system_call = 3;
    set_system_contract_operation set_system_contract = 4;
  }
}

message execute_args {
    operation operation = 1;
}

message execute_executor_args {
    operation operation = 1;
}

message execute_user_args {
    operation operation = 1;
}

message install_module_args {
    uint32 module_type_id = 1;
    bytes contract_id = 2 [(koinos.btype) = ADDRESS];
    repeated bytes scopes = 3;
    bytes data = 4;
}

message uninstall_module_args {
    uint32 module_type_id = 1;
    bytes contract_id = 2 [(koinos.btype) = ADDRESS];
    bytes data = 3;
}

message is_module_installed_args {
    uint32 module_type_id = 1;
    bytes contract_id = 2 [(koinos.btype) = ADDRESS];
    bytes data = 3;
}

message is_module_installed_result {
    bool value = 1;
}

message is_module_type_supported_args {
    uint32 module_type_id = 1;
}

message is_module_type_supported_result {
    bool value = 1;
}

message get_modules_result {
    repeated bytes value = 1 [(koinos.btype) = ADDRESS];
}

message is_valid_signature_args {
    bytes sender = 1 [(koinos.btype) = ADDRESS];
    bytes signature = 2;
    bytes tx_id = 3 [(koinos.btype) = HEX];
}

message is_valid_signature_result {
    bool value = 1;
}

message is_valid_operation_args {
    operation operation = 1;
}

message is_valid_operation_result {
    bool value = 1;
}

message init_account_args {
    bytes data = 1;
}

message selector {
    uint32 entry_point = 1;
    bytes contract_id = 2 [(koinos.btype) = ADDRESS];
}

message module_validation {
    bytes value = 1 [(koinos.btype) = ADDRESS];
}

message modules_hooks {
    repeated bytes value = 1 [(koinos.btype) = ADDRESS];
}

message modules_execution {
    repeated bytes value = 1 [(koinos.btype) = ADDRESS];
}

message module_sign {
    repeated bytes value = 1 [(koinos.btype) = ADDRESS];
}